사용자의 작업을 분석하고 A2A 에이전트를 활용한 **실행 가능한 작업 계획**을 수립하세요.

**사용자 작업**
{user_task}

**사용 가능한 에이전트** *(각 에이전트의 id, capabilities, inputs, outputs, 품질지표 포함)*
{available_agents}

**반드시 아래 스키마로만 응답**
{output_schema}

### 작성 원칙 (도메인 불문 공통 규칙)

1. **단위 작업 생성(≤10분/태스크)**

   * 목표를 위상정렬 가능한 최소 실행 단위로 분해하세요.
   * “데이터 추출/변환/분석”과 “계산/의사결정/액션”은 **가능하면 분리**합니다.

2. **에이전트 능력 분석 & 통합**

   * 각 에이전트의 **outputs**를 확인해 **한 번에 여러 산출물이 가능**하면 **단일 태스크로 통합**합니다.
   * 불가하면 분리하되, **중복 출력 재생성 금지**(이전 태스크 결과를 참조).

3. **최적 에이전트 할당**

   * 태스크의 `required_skills`와 에이전트의 `capabilities/outputs`를 **정확 매칭**해 `agent`를 지정하세요.
   * 계산/단순 분기/포맷팅 등 에이전트 역량 밖의 일은 **agent: "self"** 로.
   * `selection_rationale`로 선택 근거를 1\~2문장으로 명시.

4. **실제 입력 데이터 사용**

   * 각 태스크 `inputs`에는 사용자가 제공한 실제 텍스트/숫자/파일명/엔드포인트 등을 **그대로** 기입하세요.
   * “사용자 입력” 같은 추상 표현은 금지.

5. **요청 범위 준수**

   * 명시되지 않은 분석·확장은 포함하지 마세요(보안·비용 유의). 선택적으로 `assumptions`에 전제만 기록.

6. **결정/분기(조건 처리) 명시**

   * 조건/규칙/정책/임계값이 있다면 해당 태스크에 `decision_table` 혹은 `rules`로 **명시적으로** 기술하세요(자연어 OK).
   * 수학/변환이 있다면 별도의 **compute/transform 태스크**로 분리하고 입력·출력을 정확한 키로 연결.

7. **검증 가능성(DoD) & Validators**

   * 각 태스크 `dod`에 완료 판정 기준을 **측정 가능**하게 작성.
   * 전역/태스크별 `validators`로 입력형식·범위·의존성·오류 조건(예: division_by_zero, empty input)을 정의.

8. **병렬화 & 경로**

   * 태스크별 `dependencies`와 `parallelizable`을 명시하고, 전역 `critical_path`를 제시.

9. **관찰가능성(Observability)**

   * `observability.log_fields`에 핵심 로그 키(입력 샘플, 선택된 에이전트, 주요 파라미터/스코어/결과, 에러 등)를 정의.

10. **리스크 & 대안**

* 각 태스크에 잠재 리스크와 `mitigations` 명시(예: 외부 API 실패시 재시도/폴백/캐시).
* 필요하면 `risks_global`/`mitigations_global` 추가.

### 태스크 사양(모든 태스크에 포함)

* `id`, `title`, `description`
* `agent`(id, url?), `required_skills`, `selection_rationale`
* `inputs`(실제 값), `expected_outputs`(정확한 키명)
* `dod`(검증 가능한 완료 기준)
* `dependencies`(id 배열), `parallelizable`(true/false)
* `validators`(선택), `risks`, `mitigations`
* `est_minutes`(정수, 분 단위)

### 출력 요구(요약)

* `goal`, `assumptions(선택)`, `work_breakdown`(태스크 배열), `critical_path`, `execution_plan(phase→targets)`, `validators(전역)`, `observability`, `risks_global/mitigations_global(선택)`
* **반드시 {output_schema} 형식의 JSON만** 반환(설명/주석 금지).

> 이 프롬프트는 특정 도메인 규칙(예: 감성 임계치, 특정 수식, 특정 키명)에 의존하지 않습니다.
> 조건/계산/정책이 존재할 경우, 해당 내용만 `decision_table`/`rules`/`validators`에 일반적으로 기록하세요.
